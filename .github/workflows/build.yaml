name: build

# https://futurestud.io/tutorials/github-actions-run-on-pull-request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            6.0.x
      - name: Setup NuGet cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: "${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}"
          restore-keys: ${{ runner.os }}-nuget-
      - name: Install dependencies
        run: dotnet restore ./src/
      - name: Build
        run: dotnet build --configuration Release --no-restore ./src/
      - name: Test
        run: dotnet test ./src/ --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      # - name: Code Coverage Report
      #   uses: irongut/CodeCoverageSummary@v1.3.0
      #   with:
      #     filename: coverage/**/coverage.cobertura.xml
      #     badge: true
      #     fail_below_min: false
      #     format: markdown
      #     hide_branch_rate: false
      #     hide_complexity: true
      #     indicators: true
      #     output: both
      #     thresholds: '50 50'
      # - name: Add Coverage PR Comment
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   if: github.event_name == 'pull_request'
      #   with:
      #     recreate: true
      #     path: code-coverage-results.md

      # Do a pack (we don't care about the version because we're just going to throw it away)
      # just to make sure the solution is packable. It's unfortunate to make it to a post PR 
      # build to find out that we can't pack.
      - name: Pack
        run: dotnet pack --no-build --configuration Release /p:Version=1.0.0 --output . ./src/
      - name: Publish to GitHub packages
        run: dotnet nuget push "*.nupkg" --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
  dotnet-format:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ensure format
        run: |
          dotnet format whitespace ./src/ --verify-no-changes -v:diag --exclude ~/.nuget
          dotnet format style ./src/ --verify-no-changes -v:diag --exclude ~/.nuget